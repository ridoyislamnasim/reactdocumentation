===========================================
===========================================
//useForm
1. formState:
	errors: 
	isDirty:
	isSubmiteSuccessful:
	isSubmitted:
	isSubmitting:
	isValid:
	isValiding:
	submitCount:
	touchedFields:
2. getValues: submited value get 
3. handelSubmit: use to Submit form
4. register : which fild add to submit form to submit
5. reset : after submit if we want to refresh form fild
6. resetFild : espasific fild reset
7. setError :
8. setFocus :
9. setValue :
10. trigger :
11. unregister :
	
===========================================

import { useForm } from "react-hook-form"


export default function App() {
  const {
    register,
    handleSubmit,
    watch,
    formState: { errors },
  } = useForm()


  const onSubmit = (data) => console.log(data)


  console.log(watch("example")) // watch input value by passing the name of it


  return (
    /* "handleSubmit" will validate your inputs before invoking "onSubmit" */
    <form onSubmit={handleSubmit(onSubmit)}>
      {/* register your input into the hook by invoking the "register" function */}
      <input defaultValue="test" {...register("example")} />


      {/* include validation with required or other standard HTML validation rules */}
      <input {...register("exampleRequired", { required: true })} />
      {/* errors will return when field validation fails  */}
      {errors.exampleRequired && <span>This field is required</span>}


      <input type="submit" />
    </form>
  )
}